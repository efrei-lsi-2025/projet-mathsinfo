// @generated by protobuf-ts 2.9.4 with parameter server_grpc1,client_none,optimize_code_size
// @generated from protobuf file "services.proto" (package "metro_boulot_dodo.proto", syntax proto3)
// tslint:disable
import { Lignes } from "./data";
import { Stations } from "./data";
import { Intergares } from "./data";
import { Gares } from "./data";
import { Empty } from "./google/protobuf/empty";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service metro_boulot_dodo.proto.DataService
 */
export interface IDataService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: GetGares(google.protobuf.Empty) returns (metro_boulot_dodo.data.Gares);
     */
    getGares: grpc.handleUnaryCall<Empty, Gares>;
    /**
     * @generated from protobuf rpc: GetIntergares(google.protobuf.Empty) returns (metro_boulot_dodo.data.Intergares);
     */
    getIntergares: grpc.handleUnaryCall<Empty, Intergares>;
    /**
     * @generated from protobuf rpc: GetStations(google.protobuf.Empty) returns (metro_boulot_dodo.data.Stations);
     */
    getStations: grpc.handleUnaryCall<Empty, Stations>;
    /**
     * @generated from protobuf rpc: GetLignes(google.protobuf.Empty) returns (metro_boulot_dodo.data.Lignes);
     */
    getLignes: grpc.handleUnaryCall<Empty, Lignes>;
}
/**
 * @grpc/grpc-js definition for the protobuf service metro_boulot_dodo.proto.DataService.
 *
 * Usage: Implement the interface IDataService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IDataService = ...
 * server.addService(dataServiceDefinition, service);
 * ```
 */
export const dataServiceDefinition: grpc.ServiceDefinition<IDataService> = {
    getGares: {
        path: "/metro_boulot_dodo.proto.DataService/GetGares",
        originalName: "GetGares",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Gares.fromBinary(bytes),
        requestDeserialize: bytes => Empty.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Gares.toBinary(value)),
        requestSerialize: value => Buffer.from(Empty.toBinary(value))
    },
    getIntergares: {
        path: "/metro_boulot_dodo.proto.DataService/GetIntergares",
        originalName: "GetIntergares",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Intergares.fromBinary(bytes),
        requestDeserialize: bytes => Empty.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Intergares.toBinary(value)),
        requestSerialize: value => Buffer.from(Empty.toBinary(value))
    },
    getStations: {
        path: "/metro_boulot_dodo.proto.DataService/GetStations",
        originalName: "GetStations",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Stations.fromBinary(bytes),
        requestDeserialize: bytes => Empty.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Stations.toBinary(value)),
        requestSerialize: value => Buffer.from(Empty.toBinary(value))
    },
    getLignes: {
        path: "/metro_boulot_dodo.proto.DataService/GetLignes",
        originalName: "GetLignes",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => Lignes.fromBinary(bytes),
        requestDeserialize: bytes => Empty.fromBinary(bytes),
        responseSerialize: value => Buffer.from(Lignes.toBinary(value)),
        requestSerialize: value => Buffer.from(Empty.toBinary(value))
    }
};
